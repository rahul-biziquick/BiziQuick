generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                   String    @id @default(uuid())
  tenant_id            String
  email                String    @unique
  name                 String?
  password_hash        String?
  role_id              String?
  status               String?
  last_login_at        DateTime?
  last_ip              String?
  password_updated_at  DateTime?
  failed_login_attempts Int?
  locked_until         DateTime?
  language             String?
  timezone             String?
  locale               String?
  is_deleted           Boolean?  @default(false)
  deleted_at           DateTime?
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt
  tenant               tenants   @relation(fields: [tenant_id], references: [id])
  role                 roles?    @relation(fields: [role_id], references: [id])
  documents            documents[]
  support_tickets      support_tickets[] @relation("created_by")
  support_tickets_assigned support_tickets[] @relation("assigned_to")
  notifications        notifications[]
  checkins             checkins[]
  gps_tracking         gps_tracking[]
  mobile_documents     mobile_documents[]
  lead_sources         lead_sources[] @relation("created_by")
  lead_sources_updated lead_sources[] @relation("updated_by")
  tasks                tasks[]
  user_activities      user_activities[]
  email_logs           email_logs[]
  user_permissions     user_permissions[]
  user_preferences     user_preferences[]
  leads                leads[]
  campaigns            campaigns[]
  activities           activities[]
  user_sessions        user_sessions[]
  audit_logs           audit_logs[]
  versioned_documents  versioned_documents[]

  @@index([tenant_id, email])
}

model platform_roles {
  id          String    @id @default(uuid())
  name        String?
  permissions Json?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  platform_role_permissions platform_role_permissions[]

  @@index([name]) // Optional index for performance, if needed
}

model tenants {
  id                   String    @id @default(uuid())
  name                 String    @unique
  plan                 String?
  status               String?
  created_by           String?
  language             String?
  timezone             String?
  locale               String?
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt
  users                users[]
  roles                roles[]
  leads                leads[]
  contacts             contacts[]
  accounts_crm         accounts_crm[]
  opportunities        opportunities[]
  quotes               quotes[]
  invoices             invoices[]
  subscriptions        subscriptions[]
  automation_rules     automation_rules[]
  report_snapshots     report_snapshots[]
  support_tickets      support_tickets[]
  documents            documents[]
  tenant_settings      tenant_settings[]
  tenant_gst_locations tenant_gst_locations[]
  notifications        notifications[]
  custom_fields        custom_fields[]
  custom_field_values  custom_field_values[]
  campaigns            campaigns[]
  activities           activities[]
  checkins             checkins[]
  gps_tracking         gps_tracking[]
  mobile_documents     mobile_documents[]
  lead_stages          lead_stages[]
  rejected_reasons     rejected_reasons[]
  inactive_reasons     inactive_reasons[]
  custom_tags          custom_tags[]
  email_templates      email_templates[]
  sms_templates        sms_templates[]
  whatsapp_templates   whatsapp_templates[]
  invoice_templates    invoice_templates[]
  audit_logs           audit_logs[]
  lead_sources         lead_sources[]
  usage_metrics        usage_metrics[]
  webhooks             webhooks[]
  third_party_integrations third_party_integrations[]
  tasks                tasks[]
  payments             payments[]
  versioned_documents  versioned_documents[]
  user_activities      user_activities[]
  email_logs           email_logs[]
  module_usage         module_usage[]
  api_keys             api_keys[]
  third_party_push_integrations third_party_push_integrations[]
  third_party_pull_integrations third_party_pull_integrations[]
}

model roles {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  access_level String?
  data_scope  String?
  permissions Json?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  users       users[]
  role_permissions role_permissions[]

  @@index([tenant_id, name])
  @@unique([tenant_id, name]) // Added to enforce uniqueness for tenant_id and name combination
}

model leads {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  email       String?
  phone       String?
  status      String?
  source      String?
  created_by  String?
  is_deleted  Boolean?  @default(false)
  deleted_at  DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  created_by_user users?  @relation(fields: [created_by], references: [id])
  contacts    contacts[]

  @@index([tenant_id, name]) // Updated to match seed script's composite key
}

model contacts {
  id          String    @id @default(uuid())
  tenant_id   String
  lead_id     String?
  name        String?
  email       String?
  phone       String?
  designation String?
  is_deleted  Boolean?  @default(false)
  deleted_at  DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  lead        leads?    @relation(fields: [lead_id], references: [id])
  opportunities opportunities[]

  @@index([tenant_id, lead_id]) // Updated to match seed script's composite key
}

model accounts_crm {
  id          String    @id @default(uuid())
  tenant_id   String
  company_name String?
  industry    String?
  size        String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model opportunities {
  id          String    @id @default(uuid())
  tenant_id   String
  contact_id  String?
  stage       String?
  value       Decimal?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  contact     contacts? @relation(fields: [contact_id], references: [id])
  quotes      quotes[]

  @@index([tenant_id, contact_id]) // Updated to match seed script's composite key
}

model quotes {
  id            String    @id @default(uuid())
  tenant_id     String
  opportunity_id String?
  quote_pdf_url String?
  status        String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  tenant        tenants   @relation(fields: [tenant_id], references: [id])
  opportunity   opportunities? @relation(fields: [opportunity_id], references: [id])
  invoices      invoices[]

  @@index([tenant_id, opportunity_id]) // Updated to match seed script's composite key
}

model invoices {
  id            String    @id @default(uuid())
  tenant_id     String
  quote_id      String?
  invoice_number String?
  due_date      DateTime?
  status        String?
  is_deleted    Boolean?  @default(false)
  deleted_at    DateTime?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  tenant        tenants   @relation(fields: [tenant_id], references: [id])
  quote         quotes?   @relation(fields: [quote_id], references: [id])
  payments      payments[]

  @@index([tenant_id, quote_id]) // Updated to match seed script's composite key
}

model subscriptions {
  id          String    @id @default(uuid())
  tenant_id   String
  plan        String?
  status      String?
  start_date  DateTime?
  end_date    DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model plan_features {
  id           String    @id @default(uuid())
  plan         String?
  module_name  String?
  feature_name String?
  enabled      Boolean?  @default(false)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
}

model automation_rules {
  id           String    @id @default(uuid())
  tenant_id    String
  trigger_event String?
  conditions   Json?
  actions      Json?
  is_active    Boolean?  @default(false)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  tenant       tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model report_snapshots {
  id           String    @id @default(uuid())
  tenant_id    String
  report_type  String?
  data         Json?
  generated_at DateTime?
  tenant       tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model support_tickets {
  id          String    @id @default(uuid())
  tenant_id   String
  subject     String?
  description String?
  priority    String?
  status      String?
  created_by  String?
  assigned_to String?
  created_at  DateTime  @default(now())
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  creator     users?    @relation("created_by", fields: [created_by], references: [id])
  assignee    users?    @relation("assigned_to", fields: [assigned_to], references: [id])

  @@index([tenant_id])
}

model documents {
  id           String    @id @default(uuid())
  tenant_id    String
  name         String?
  file_url     String?
  type         String?
  uploaded_by  String?
  uploaded_at  DateTime?
  file_size    BigInt?
  file_type    String?
  tenant       tenants   @relation(fields: [tenant_id], references: [id])
  uploader     users?    @relation(fields: [uploaded_by], references: [id])
  versioned_documents versioned_documents[]

  @@index([tenant_id, uploaded_by])
}

model page_help {
  id          String    @id @default(uuid())
  page_name   String?
  help_text   String?
  video_url   String?
  created_at  DateTime  @default(now())
}

model tenant_settings {
  id          String    @id @default(uuid())
  tenant_id   String
  key         String?
  value       Json?
  category    String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model tenant_gst_locations {
  id            String    @id @default(uuid())
  tenant_id     String
  gstin         String?
  location_name String?
  address       String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  tenant        tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model notifications {
  id          String    @id @default(uuid())
  tenant_id   String
  user_id     String?
  title       String?
  message     String?
  is_read     Boolean?  @default(false)
  created_at  DateTime  @default(now())
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  user        users?    @relation(fields: [user_id], references: [id])

  @@index([tenant_id])
}

model custom_fields {
  id            String    @id @default(uuid())
  tenant_id     String
  entity_type   String?
  label         String?
  field_type    String?
  options       Json?
  is_required   Boolean?  @default(false)
  display_order Int?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  tenant        tenants   @relation(fields: [tenant_id], references: [id])
  custom_field_values custom_field_values[]

  @@index([tenant_id])
}

model custom_field_values {
  id              String    @id @default(uuid())
  tenant_id       String
  custom_field_id String
  entity_type     String?
  entity_id       String?
  value           String?
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  tenant          tenants   @relation(fields: [tenant_id], references: [id])
  custom_field    custom_fields @relation(fields: [custom_field_id], references: [id])

  @@index([tenant_id])
}

model campaigns {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  description String?
  type        String?
  status      String?
  created_by  String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  creator     users?    @relation(fields: [created_by], references: [id])

  @@index([tenant_id])
}

model activities {
  id          String    @id @default(uuid())
  tenant_id   String
  entity_type String?
  entity_id   String?
  type        String?
  content     String?
  timestamp   DateTime?
  created_by  String?
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  creator     users?    @relation(fields: [created_by], references: [id])

  @@index([tenant_id])
}

model user_sessions {
  id            String    @id @default(uuid())
  user_id       String
  device_type   String?
  ip_address    String?
  user_agent    String?
  logged_in_at  DateTime?
  logged_out_at DateTime?
  created_at    DateTime  @default(now())
  user          users     @relation(fields: [user_id], references: [id])
}

model checkins {
  id            String    @id @default(uuid())
  user_id       String
  tenant_id     String
  checkin_time  DateTime?
  checkout_time DateTime?
  user          users     @relation(fields: [user_id], references: [id])
  tenant        tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model gps_tracking {
  id          String    @id @default(uuid())
  user_id     String
  tenant_id   String
  latitude    Float?
  longitude   Float?
  accuracy    Float?
  timestamp   DateTime?
  user        users     @relation(fields: [user_id], references: [id])
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model mobile_documents {
  id          String    @id @default(uuid())
  tenant_id   String
  user_id     String
  file_name   String?
  file_url    String?
  file_type   String?
  uploaded_at DateTime?
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  user        users     @relation(fields: [user_id], references: [id])

  @@index([tenant_id])
}

model lead_stages {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  order       Int?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model rejected_reasons {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  order       Int?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model inactive_reasons {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  order       Int?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model custom_tags {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  order       Int?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model email_templates {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  subject     String?
  body        String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model sms_templates {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  body        String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model whatsapp_templates {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  body        String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model invoice_templates {
  id          String    @id @default(uuid())
  tenant_id   String
  name        String?
  body        String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model audit_logs {
  id              String    @id @default(uuid())
  tenant_id       String
  user_id         String?
  entity_type     String?
  entity_id       String?
  action          String?
  old_values      Json?
  new_values      Json?
  action_timestamp DateTime?
  created_at      DateTime  @default(now())
  ip_address      String?
  user_agent      String?
  tenant          tenants   @relation(fields: [tenant_id], references: [id])
  user            users?    @relation(fields: [user_id], references: [id])

  @@index([tenant_id, entity_type])
}

model lead_sources {
  id          String    @id @default(uuid())
  tenant_id   String
  source_name String?
  is_active   Boolean?  @default(false)
  created_by  String?
  updated_by  String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  creator     users?    @relation("created_by", fields: [created_by], references: [id])
  updater     users?    @relation("updated_by", fields: [updated_by], references: [id])

  @@index([tenant_id])
}

model permissions {
  id          String    @id @default(uuid())
  code        String?
  module      String?
  feature     String?
  action      String?
  description String?
  is_active   Boolean?  @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  role_permissions role_permissions[]
  user_permissions user_permissions[]
  platform_role_permissions platform_role_permissions[]
}

model role_permissions {
  id           String    @id @default(uuid())
  role_id      String
  permission_id String
  role         roles     @relation(fields: [role_id], references: [id])
  permission   permissions @relation(fields: [permission_id], references: [id])

  @@index([role_id])
  @@index([permission_id])
}

model user_permissions {
  id           String    @id @default(uuid())
  user_id      String
  permission_id String
  override     Boolean?  @default(false)
  user         users     @relation(fields: [user_id], references: [id])
  permission   permissions @relation(fields: [permission_id], references: [id])

  @@index([user_id])
  @@index([permission_id])
}

model platform_role_permissions {
  id               String    @id @default(uuid())
  platform_role_id String
  permission_id    String
  platform_role    platform_roles @relation(fields: [platform_role_id], references: [id])
  permission       permissions @relation(fields: [permission_id], references: [id])

  @@index([platform_role_id])
  @@index([permission_id])
}

model usage_metrics {
  id          String    @id @default(uuid())
  tenant_id   String
  module      String?
  action      String?
  count       Int?
  recorded_on DateTime?
  created_at  DateTime  @default(now())
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id, module, recorded_on])
}

model webhooks {
  id           String    @id @default(uuid())
  tenant_id    String
  name         String?
  event        String?
  target_url   String?
  secret_token String?
  is_active    Boolean?  @default(false)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  tenant       tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model third_party_integrations {
  id          String    @id @default(uuid())
  tenant_id   String
  provider    String?
  api_key     String?
  config      Json?
  is_active   Boolean?  @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model tasks {
  id          String    @id @default(uuid())
  tenant_id   String
  assigned_to String?
  entity_type String?
  entity_id   String?
  title       String?
  description String?
  status      String?
  due_date    DateTime?
  priority    String?
  is_deleted  Boolean?  @default(false)
  deleted_at  DateTime?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  assignee    users?    @relation(fields: [assigned_to], references: [id])

  @@index([tenant_id, assigned_to])
}

model payments {
  id            String    @id @default(uuid())
  tenant_id     String
  invoice_id    String?
  amount        Decimal?
  payment_date  DateTime?
  payment_method String?
  transaction_id String?
  gateway       String?
  is_deleted    Boolean?  @default(false)
  deleted_at    DateTime?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  tenant        tenants   @relation(fields: [tenant_id], references: [id])
  invoice       invoices? @relation(fields: [invoice_id], references: [id])

  @@index([tenant_id])
}

model versioned_documents {
  id          String    @id @default(uuid())
  tenant_id   String
  document_id String
  version     Int?
  file_url    String?
  file_size   BigInt?
  uploaded_at DateTime?
  uploaded_by String?
  is_deleted  Boolean?  @default(false)
  deleted_at  DateTime?
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  document    documents @relation(fields: [document_id], references: [id])
  uploader    users?    @relation(fields: [uploaded_by], references: [id])

  @@index([tenant_id, document_id, version])
}

model user_activities {
  id          String    @id @default(uuid())
  user_id     String
  tenant_id   String
  action      String?
  context     Json?
  created_at  DateTime  @default(now())
  user        users     @relation(fields: [user_id], references: [id])
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
}

model email_logs {
  id          String    @id @default(uuid())
  tenant_id   String
  user_id     String?
  to_email    String?
  subject     String?
  status      String?
  sent_at     DateTime?
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
  user        users?    @relation(fields: [user_id], references: [id])
}

model module_usage {
  id           String    @id @default(uuid())
  tenant_id    String
  module_name  String?
  count        Int?
  recorded_on  DateTime?
  tenant       tenants   @relation(fields: [tenant_id], references: [id])
}

model api_keys {
  id          String    @id @default(uuid())
  tenant_id   String
  key         String    @unique
  name        String?
  is_active   Boolean?  @default(false)
  created_at  DateTime  @default(now())
  tenant      tenants   @relation(fields: [tenant_id], references: [id])
}

model user_preferences {
  id          String    @id @default(uuid())
  user_id     String
  preferences Json?
  updated_at  DateTime  @updatedAt
  user        users     @relation(fields: [user_id], references: [id])
}

model third_party_push_integrations {
  id          String    @id @default(uuid())
  tenant_id   String
  provider    String?
  target_url  String?
  auth_type   String?
  credentials Json?
  events      Json?
  is_active   Boolean?  @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tenant      tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}

model third_party_pull_integrations {
  id              String    @id @default(uuid())
  tenant_id       String
  provider        String?
  source_url      String?
  auth_type       String?
  credentials     Json?
  fetch_frequency String?
  last_fetched_at DateTime?
  is_active       Boolean?  @default(false)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  tenant          tenants   @relation(fields: [tenant_id], references: [id])

  @@index([tenant_id])
}